eMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: FeedbackStateMachine
      DefinitionString: !Sub |
        {
          "Comment": "State machine to handle test generation with feedback",
          "StartAt": "Starting",
          "States": {
            "CreateReport": {
                "Type": "Task",
                "Resource": "arn:aws:states:::lambda:invoke",
                "OutputPath": "$.Payload",
                "Parameters": {
                    "BuildResult.$": "$.buildResult",
                    "FunctionName": "arn:aws:lambda:eu-south-1:344740472567:function:createReport"
                },
                "ResultPath": "$.buildResult.BuildStatus",
                "Next": "BuildResult"
            },
            "BuildResult": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.buildResult.BuildStatus",
                    "StringEquals": "SUCCEEDED",
                    "Next": "HandleReport"
                  },
                  {
                    "Variable": "$.buildResult.BuildStatus",
                    "StringEquals": "FAILED",
                    "Next": "SendEmail"
                  }
                ],
                "Default": "UnknownState"
            },
            "HandleReport": {
                "Type": "Task",
                "Resource": "arn:aws:states:::lambda:invoke",
                "OutputPath": "$.Payload",
                "Parameters": {
                    "Payload.$": "$",
                    "FunctionName": "arn:aws:lambda:eu-south-1:344740472567:function:handleReport"
                },
                "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 3,
                    "BackoffRate": 2,
                    "JitterStrategy": "FULL"
                }
                ],
                "Next": "StartBuild"
            },
            "SendEmail": {
                "Type": "Task",
                "Resource": "arn:${AWS::Partition}:states:::lambda:invoke.waitForTaskToken",
                "OutputPath": "$.Payload",
                "Parameters": {
                    "Payload": {
                          "ExecutionContext.$": "$$",
                          "APIGatewayEndpoint": "https://${ExecutionApi}.execute-api.${AWS::Region}.amazonaws.com/states"
                    },
                    "FunctionName": "arn:aws:lambda:eu-south-1:344740472567:function:sendEmail"
                },
                "Retry": [
                  {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException"
                    ],
                    "IntervalSeconds": 1,
                    "MaxAttempts": 3,
                    "BackoffRate": 2,
                    "JitterStrategy": "FULL"
                  }
                ],
                "Next": "ManualApprovalChoiceState"
            },
            "ManualApprovalChoiceState": {
                "Type": "Choice",
                "Choices": [
                {
                    "Variable": "$.Status",
                    "StringEquals": "Approved! Task approved by ${Email}",
                    "Next": "HandleReport"
                },
                {
                    "Variable": "$.Status",
                    "StringEquals": "Rejected! Task rejected by ${Email}",
                    "Next": "FailState"
                }
                ]
            },
            "StartBuild": {
                "Type": "Task",
                "Resource": "arn:aws:states:::codebuild:startBuild.sync",
                "Parameters": {
                    "ProjectName": "FeedbackBuildProject",
                    "SourceVersion.$": "$.body.branch"
                },
                "ResultSelector": {
                    "BuildStatus.$": "$.Build.BuildStatus",
                    "BuildId.$": "$.Build.Id",
                    "Logs.$": "$.Build.Logs.DeepLink",
                    "ArtifactLocation.$": "$.Build.Artifacts.Location"
                },
                "ResultPath": "$.buildResult",
                "Next": "Ending",
                "Catch": [
                  {
                    "ErrorEquals": ["States.ALL"],
                    "Next": "CreateReport"
                  }
                ]
            },
            "Ending": {
                "Type": "Pass",
                "End": true
            },
            "UnknownState": {
                "Type": "Fail",
                "Error": "UnknownBuildStatus",
                "Cause": "The build returned an unknown status."
            },
            "FailState": {
                "Type": "Fail",
                "Error": "Pipeline failed",
                "Cause": "The pipeline failed due to user's choice"
            }
          }
        }